#!/usr/bin/env python3

# Importing modules
import subprocess, argparse, re


def get_current_mac(interface):
    ''' 
    This function gets the current mac address
    It takes an interface as argument and returns 
    the mac address
    '''
    ifconfig_interface_output = subprocess.check_output(["ifconfig", interface])
    search_pattern = "\w\w:\w\w:\w\w:\w\w:\w\w:\w\w" #regular experession to find the MAC address.
    mac_address = re.search(search_pattern, str(ifconfig_interface_output))# Extract MAC address from ifconig_output

    if mac_address:
        return mac_address.group(0)
    else:
       return 
        
def change_mac_address(interface, new_mac_addr) -> None:
    ''' 
    This function changes the mac address from.
    It takes two arguments, the interface and the new MAC address.
    '''
    print(f'[+] Changing MAC address for "{interface}"')
    subprocess.call(["ifconfig", interface, "down"])
    subprocess.call(["ifconfig", interface, "hw", "ether", new_mac_addr])
    subprocess.call(["ifconfig", interface, "up"])

def get_gommanline_args():
    """
    This function gets the command line arguments.
    The command line arguments are interface and mac address.
    """
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--interface", help="Interface to change MAC address.")
    parser.add_argument("-m", "--mac", help="New MAC address.")

    args =  parser.parse_args()
    if not args.interface:
        parser.error("[-] An interface not specified. Use -h or --help for more info.")
    if not args.mac:
        parser.error("[-] A new MAC address not specified. Use -h or --help for more info.")
    return args

def is_interface(interface)->bool:
    """
    This function checks whether the given argument is an interface.
    It returns True if the interface is a part of a list and False otherwise.
    """
    ifconfig_result = str(subprocess.check_output(["ifconfig"]))
    interfaces_list = [i.strip("', \\n") for i in re.findall("(\S?\w+):\s", ifconfig_result)]
    return interface in interfaces_list
    
def main():
    args = get_gommanline_args()
    #print(f'Command Line: {commandline_output.interface}')
    interface = args.interface
    new_mac_addr = args.mac
    #print(new_mac_addr)

    boolean = is_interface(interface)
    if boolean:
        current_mac = get_current_mac(interface)
        if current_mac:
            print(f'[+] Current MAC address for "{interface}": {current_mac}')
            change_mac_address(interface, new_mac_addr)
        else:
            print(f'[-] MAC address for "{interface}": {current_mac}')

        #Check to see if MAC address got changed.

        current_mac = get_current_mac(interface)
        if current_mac == new_mac_addr:
            print(f'[+] MAC address successfully changed !!!')
            print(f'[+] Current MAC address for "{interface}": {current_mac}')
    else:
        print(f"[-] Invalid interface")

if __name__ == "__main__":
    main()
    
    
    
    
